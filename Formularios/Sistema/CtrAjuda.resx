<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOKSURBVHhe7ZXLTxNRFMZZuNToQiOPlSZg4mNDRNihbmDpQv8Aw0bF6AKkCzFhoX+CLoxg3JGg
        QUgwEZBHY2nR0hfQlrZQKAQqbWc6UzdownFOvR3LeEdtub7K+ZJfMpk559zvfJ22ZSQSiUQikUiknyi6
        umFZ30wF4klpKiHJg8m08lDjfkJW21KyejUpq5cScqZRkj6ekSTpIGsTJlmWD+FsPAPPwjPxbPSAXtAT
        ekOP6JW1iVMotraSlBUoAEnDlZCU3pSs3E6k02cBYB8bZyqsSSpKXbZH68UZbBbvDC7olY0Toxl/uGFh
        eZV7WIEoSTndnVDVGjZal3bvBD77WsPt/WXQqzcUqmejdy9XMNwtKIAcWylFaWLjy1IppRnvGWqKBr16
        gotP2PjCVNHh68unptPX75gLfxYcAASX45/6J95tIXjNqykW9Iqe0btxH7amubQiyKelxw/uYCQ7lHdY
        sUTX4vByzJYFr3k1xYJe0XNLt3/HLghb01zGhj5b6L8NAL0b92FrmsvYgIP+dgALGwpcfq5CbU8G7o2r
        3Jp8cgEgxn3YmuYyNvwLAXSOqXDsUUbHGvlxCCUXwF1DAJMRfl2OkgsgElfgygsVTj7OwIPJPfgVKBQK
        oNQCcEQV6PWqOksf+HU5Si6ALu2vL/9H8O3iHvsXoAAoAAqAAqAAKAAKgAKgACgACoAC2JMBeGIKvAqo
        Oiub/LocJRdAoVAAFAAFQAFQAKIDGLG7dMMD41MwZJ2G11NOeDPtBqvTBzb3HEz7AuDyh2AuEoVIbB3W
        4gnYTKW5JoNLq/o8vObVYC/OwFnz4eXsbDwDz8Iz8Wz0gF7QU24eehUagM09rw8vlIFxO4xpRp3zIQiv
        rOmB8ALAZ1jzXqvFHuzNn1UI6FlIAE4t9cGJ4o0YwU/LqxkLLMX0e3jt0e4NWR07ancDekbvxn3YmuYy
        NgzbndwDdsuo49tXasQ+s+OZKNC7cR+2prmMDaKpPtcINbUNXKrrLnB7RMLWNBevSSTHm69xl0eON13n
        9oiErWkuXpNIqlqHobr+4nfL472q1hFuj0jYmubiNYmm8taE9ibc0F7589nXHj/5ypuj3FrRsDX/vA53
        BA9UdHjdPFMGXEe65vezttJSNoQ7s8+0JbcNSyPblRbf05JdPl9H272nyy2z7bgwUt4x21Zu8Zxij0kk
        EolEIpFIv19lZV8A9Vi8JeKA1kcAAAAASUVORK5CYII=
</value>
  </data>
</root>